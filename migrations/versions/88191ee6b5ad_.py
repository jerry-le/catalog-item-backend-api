"""empty message

Revision ID: 88191ee6b5ad
Revises: 
Create Date: 2018-10-15 12:13:05.883486

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '88191ee6b5ad'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('catalog',
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=80), nullable=True),
                    sa.Column('description', sa.String(length=256), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('control',
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('element_id', sa.String(length=128), nullable=True),
                    sa.Column('element_class', sa.String(length=128), nullable=True),
                    sa.Column('description', sa.String(length=256), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('permission',
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('action', sa.String(length=16), nullable=True),
                    sa.Column('resource', sa.String(length=32), nullable=True),
                    sa.Column('description', sa.String(length=256), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('role',
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=64), nullable=True),
                    sa.Column('description', sa.String(length=256), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user',
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(length=256), nullable=True),
                    sa.Column('email', sa.String(length=128), nullable=True),
                    sa.Column('password', sa.String(length=256), nullable=True),
                    sa.Column('password_salt', sa.String(length=64), nullable=True),
                    sa.Column('google_id', sa.String(length=32), nullable=True),
                    sa.Column('image_url', sa.String(length=512), nullable=True),
                    sa.Column('token', sa.String(length=512), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('google_id')
                    )
    op.create_table('article',
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(length=256), nullable=False),
                    sa.Column('slug', sa.String(length=512), nullable=False),
                    sa.Column('content', sa.Text(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('slug')
                    )
    op.create_table('log',
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('action', sa.String(length=16), nullable=True),
                    sa.Column('resource', sa.String(length=32), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('role_control',
                    sa.Column('role_id', sa.Integer(), nullable=True),
                    sa.Column('control_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['control_id'], ['control.id'], ),
                    sa.ForeignKeyConstraint(['role_id'], ['role.id'], )
                    )
    op.create_table('role_permission',
                    sa.Column('role_id', sa.Integer(), nullable=True),
                    sa.Column('permission_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
                    sa.ForeignKeyConstraint(['role_id'], ['role.id'], )
                    )
    op.create_table('user_control',
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('control_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['control_id'], ['control.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
                    )
    op.create_table('user_permission',
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('permission_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
                    )
    op.create_table('user_role',
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('role_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
                    )
    op.create_table('catalog_article',
                    sa.Column('catalog_id', sa.Integer(), nullable=True),
                    sa.Column('article_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['article_id'], ['article.id'], ),
                    sa.ForeignKeyConstraint(['catalog_id'], ['catalog.id'], )
                    )
    op.create_table('comment',
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('article_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['article_id'], ['article.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comment')
    op.drop_table('catalog_article')
    op.drop_table('user_role')
    op.drop_table('user_permission')
    op.drop_table('user_control')
    op.drop_table('role_permission')
    op.drop_table('role_control')
    op.drop_table('log')
    op.drop_table('article')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('permission')
    op.drop_table('control')
    op.drop_table('catalog')
    # ### end Alembic commands ###
